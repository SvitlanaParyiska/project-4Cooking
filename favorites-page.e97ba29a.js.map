{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-cc952712855cbc07.js","src/favorite-page.js","src/js/favorites.js","node_modules/@parcel/runtime-js/lib/runtime-03fe8ef0e58f0cc1.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"1Z6Xn\\\":\\\"favorites-page.e97ba29a.js\\\",\\\"ee16w\\\":\\\"sprite.f129be79.svg\\\",\\\"1sXBe\\\":\\\"index.547ed4fc.js\\\"}\"));","import './js/header';\nimport './js/favorites-hero';\nimport './js/favorites';\nimport './js/create_order';\n","import axios from 'axios';\nimport svg from '../images/sprite.svg';\nimport { createPlugFavoriteMarkup } from './plug';\nimport { save, load, remove } from './localStorageJSON';\n\nconst refs = {\n  favoritesCategoriesList: document.querySelector('.favorites-category-list'),\n  favoritesRecipesList: document.querySelector('.favorites-recipes-list'),\n  emptyStorage: document.querySelector('.empty-storage-js'),\n};\n\nconst KEY_FAVOURITE = 'favourite';\nlet favCatArrObj = [];\n\nrefs.favoritesCategoriesList.addEventListener('click', filterFavRecipeByCategory);\n\ncheckArrFavoritesId();\n\nasync function checkArrFavoritesId() {\n  const arrFavoritesId = load(KEY_FAVOURITE);\n\n  if (!arrFavoritesId || arrFavoritesId.length === 0) {\n    const markStr = createPlugFavoriteMarkup();\n    refs.emptyStorage.innerHTML = markStr;\n  } else {\n    try {\n      const recipesList = await fetchUsers(arrFavoritesId);\n      favCatArrObj = createFavCatArrObj(recipesList);\n      MarkUpFavSearch(favCatArrObj);\n      MarkUpRecipes(favCatArrObj);\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n}\n\nasync function fetchUsers(arrId) {\n  const BASE_URL_RECIPES = 'https://tasty-treats-backend.p.goit.global/api/recipes/';\n  try {\n    const arrOfPromises = arrId.map(async itemId => {\n      const response = await fetch(`${BASE_URL_RECIPES}${itemId}`);\n      return response.json();\n    });\n    const recipes = await Promise.allSettled(arrOfPromises);\n    return recipes.map(recipe => recipe.value);\n  } catch {\n    throw new Error('ERROR');\n  }\n}\n\nfunction createFavCatArrObj(recipesList) {\n  const favCatArr = [];\n  const uniqueCategories = [...new Set(recipesList.map(recipe => recipe.category))];\n  \n  uniqueCategories.forEach(category => {\n    const recipesInCategory = recipesList.filter(recipe => recipe.category === category);\n    favCatArr.push({ categ: category, recipes: recipesInCategory });\n  });\n\n  return favCatArr;\n}\n\nfunction MarkUpFavSearch(arr) {\n  const favSearchArr = arr.map(\n    ({ categ }) => ` <li class=\"fav-search-item\">\n          <button type=\"button\" class=\"fav-search-button\">${categ}</button>\n        </li>`\n  );\n  refs.favoritesCategoriesList.innerHTML = `<li class=\"fav-search-item\">\n          <button type=\"button\" class=\"fav-search-button all-category-btn\">All categories</button>\n        </li>${favSearchArr.join('')}`;\n}\n\nfunction filterFavRecipeByCategory(event) {\n  const selectedCategory = event.target.textContent;\n\n  if (selectedCategory === 'All categories') {\n    MarkUpRecipes(favCatArrObj);\n  } else {\n    const selectedCategoryObj = favCatArrObj.find(obj => obj.categ === selectedCategory);\n    MarkUpRecipes([selectedCategoryObj]);\n  }\n}\n\nfunction MarkUpRecipes(arr) {\n  refs.favoritesRecipesList.innerHTML = '';\n  const favorArr = arr.flatMap(\n    ({ recipes }) => recipes.map(\n      ({ _id, title, category, description, preview, rating }) => `<li class=\" dishes-list-item-fav\" data-id=\"${_id}\" data-category=\"${category}\" style=\"background: linear-gradient(1deg, rgba(5, 5, 5, 0.60) 0%, rgba(5, 5, 5, 0.00) 100%), url(${preview}); background-position: center;\n                      background-size: cover;\">\n        <button type=\"button\" aria-label=\"Favorite Button\" class=\"heart-btn js-favourite\" data-heart=\"heart\">\n        <svg class=\"dishes-list-heart-icon\">\n        <use href=\"${svg}#icon-heart\">\n        </use>\n    </svg>\n</button>\n            \n            <div class=\"dishes-list-item-wrapper-fav\">\n                <h3 class=\"dishes-list-item-title\">${title}</h3>\n                <p class=\"dishes-list-item-text-fav\">${description}</p>\n                <div class=\"dishes-list-item-wrapper-rating\">\n                    <div class=\"dishes-list-item-wrapper-rating-star\">\n                        <p class=\"dishes-list-item-wrapper-rating-text\">${rating}</p>\n                        <div class=\"dishes-list-item-wrapper-rating-star-5\">\n                            <svg class=\"dishes-list-star-icon is-active-star\">\n                                <use href=\"${svg}#icon-star\">\n                                </use>\n                            </svg>\n                            <svg class=\"dishes-list-star-icon is-active-star\">\n                                <use href=\"${svg}#icon-star\">\n                                </use>\n                            </svg>\n                            <svg class=\"dishes-list-star-icon is-active-star\">\n                                <use href=\"${svg}#icon-star\">\n                                </use>\n                            </svg>\n                            <svg class=\"dishes-list-star-icon is-active-star\">\n                                <use href=\"${svg}#icon-star\">\n                                </use>\n                            </svg>\n                            <svg class=\"dishes-list-star-icon\">\n                                <use href=\"${svg}#icon-star\">\n                                </use>\n                            </svg>\n                        </div>\n                    </div>\n                    <button type=\"button\" data-id=\"${_id}\" data-recipe-btn=\"click\" class=\"see-recipe-btn js-see-recipe js-recipe\">See recipe</button>\n                </div>\n            </div>\n        </li>`)\n      \n    );\n\nrefs.favoritesRecipesList.innerHTML = favorArr.join('');\n}\n\n// console.log(favCatArrObj);\n\n// function filterFavRecipeByCategory(event) {\n//   let favSortArr = [];\n//   const selectedCategory = event.target.textContent;\n//   favCatArrObj.forEach(obj => {\n//     if (obj.categ[0] === selectedCategory) {\n//       favSortArr.push(...obj.id);\n//     }\n//   });\n//   console.log(favSortArr);\n//   getArrPromiseFilterById(favSortArr);\n// }\n\n// async function getArrPromiseFilterById(catArr) {\n//   // if (!catArr || catArr.length === 0) {\n//   //   return;\n//   // }\n\n//   try {\n//     const recipesListByCategory = await fetchUsers(catArr);\n//     MarkUpRecipes(recipesListByCategory);\n//   } catch (error) {\n//     console.log(error.message);\n//   }\n// }\n\n// function filterFavoriteCard() {\n//   const cardsLisCategory = document.querySelectorAll('.fav-search-button');\n//   console.log(cardsLisCategory);\n//   cardsLisCategory.forEach(button => {\n//     button.addEventListener('click', event => {\n//       const selectedCategory = event.target.textContent;\n//       console.log(selectedCategory);\n//       save('category', selectedCategory);\n//       save('page', 1);\n\n//       favSortArr = [];\n\n//       favCatArrObj.forEach(obj => {\n//         if (obj.categ[0] === selectedCategory) {\n//           favSortArr.push(...obj.id);\n//         }\n//         console.log(favSortArr);\n//       });\n\n//       rend();\n//       pagination.reset(favSortArr.length);\n//     });\n//   });\n// }\n\n// function rend() {\n//   const recipesList = favSortArr.map(recipeId => {\n//     return recipes.find(recipe => recipe._id === recipeId);\n//   });\n\n//   MarkUpRecipes(recipesList);\n// }\n// filterFavoriteCard();\n","module.exports = require('./helpers/bundle-url').getBundleURL('1Z6Xn') + require('./helpers/bundle-manifest').resolve(\"ee16w\");"],"names":["parcelRequire","register","JSON","parse","$bpxeT","$5110dce03eac504f$exports","getBundleURL","resolve","$6befdf793f7dd1b0$var$refs","favoritesCategoriesList","document","querySelector","favoritesRecipesList","emptyStorage","$6befdf793f7dd1b0$var$KEY_FAVOURITE","$6befdf793f7dd1b0$var$favCatArrObj","$6befdf793f7dd1b0$var$_checkArrFavoritesId","$parcel$interopDefault","$2TvXO","mark","_callee","arrFavoritesId","markStr","recipesList","$dIy1I","load","length","$bHHEi","createPlugFavoriteMarkup","innerHTML","$6befdf793f7dd1b0$var$fetchUsers","_ctx","sent","$6befdf793f7dd1b0$var$MarkUpFavSearch","$6befdf793f7dd1b0$var$createFavCatArrObj","$6befdf793f7dd1b0$var$MarkUpRecipes","console","log","t0","message","apply","this","arguments","arrId","$6befdf793f7dd1b0$var$_fetchUsers","_callee1","arrOfPromises","recipes","map","itemId","response","fetch","concat","json","Promise","allSettled","_ctx1","recipe","value","Error","favCatArr","$8nrFW","Set","category","forEach","recipesInCategory","filter","push","categ","arr","favSearchArr","param","join","favorArr","flatMap","param1","_id","title","description","preview","rating","addEventListener","event","selectedCategory","target","textContent","find","obj","$6befdf793f7dd1b0$var$checkArrFavoritesId"],"version":3,"file":"favorites-page.e97ba29a.js.map"}